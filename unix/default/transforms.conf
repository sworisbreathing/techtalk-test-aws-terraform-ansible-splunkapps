# Copyright (C) 2005-2011 Splunk Inc. All Rights Reserved.
# DO NOT EDIT THIS FILE!
# Please make all changes to files in $SPLUNK_HOME/etc/apps/TA-nix/local.
# To make changes, copy the section/stanza you want to change from $SPLUNK_HOME/etc/apps/TA-nix/default
# into ../local and edit there.
#

###### Globals ######

## Lookups
[nix_action_lookup]
filename = vendor_actions.csv
case_sensitive_match = false

## Aliases
[host_as_dest]
SOURCE_KEY = host
REGEX = (.+)
FORMAT = dest::"$1"

[host_as_src]
SOURCE_KEY = host
REGEX = (.+)
FORMAT = src::"$1"

[src_dns_as_src]
SOURCE_KEY = src_dns
REGEX = (.+)
FORMAT = src::"$1"

[src_ip_as_src]
SOURCE_KEY = src_ip
REGEX = (.+)
FORMAT = src::"$1"

[dest_nt_host_as_dest]
SOURCE_KEY = dest_nt_host
REGEX = (.+)
FORMAT = dest::"$1"

[dest_mac_as_dest]
SOURCE_KEY = dest_mac
REGEX = (.+)
FORMAT = dest::"$1"

[dest_ip_as_dest]
SOURCE_KEY = dest_ip
REGEX = (.+)
FORMAT = dest::"$1"


###### DHCP ######
[dvc_for_dhcpd]
REGEX = via\s+(.*)
FORMAT = dvc::$1

[signature_for_dhcpd]
REGEX = dhcpd\:\s+([^\s]+)
FORMAT = signature::$1

[dest_kv_for_dhcpd_ack]
REGEX = DHCPACK\s+on\s+(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\s*(\((\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\))?\s*to\s+(([a-fA-F0-9]{2}.?){6})\s*(\(([^\)]+)\))?
FORMAT = dest_ip::$1 dest_translated_ip::$3 dest_mac::$4 dest_nt_host::$7

[dest_kv_for_dhcpd_ack2]
REGEX = DHCPACK\s+to\s+(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\s*(\((([a-fA-F0-9]{2}.?){6})\))?
FORMAT = dest_ip::$1 dest_mac::$3

[dest_kv_for_dhcpd_discover]
REGEX = DHCPDISCOVER\s+from\s+(([a-fA-F0-9]{2}.?){6})\s*(\(([^\)]+)\))?
FORMAT = dest_mac::$1 dest_nt_host::$4

[dest_kv_for_dhcpd_inform]
REGEX = DHCPINFORM\s+from\s+(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})
FORMAT = dest_ip::$1

[dest_kv_for_dhcpd_nak]
REGEX = DHCPNAK\s+on\s+(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\s*(\((\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\))?\s*to\s+(([a-fA-F0-9]{2}.?){6})\s*(\(([^\)]+)\))?
FORMAT = dest_ip::$1 dest_translated_ip::$3 dest_mac::$4 dest_nt_host::$7

[dest_kv_for_dhcpd_offer]
REGEX = DHCPOFFER\s+on\s+(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\s*(\((\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\))?\s*to\s+(([a-fA-F0-9]{2}.?){6})\s*(\(([^\)]+)\))?
FORMAT = dest_ip::$1 dest_translated_ip::$3 dest_mac::$4 dest_nt_host::$7

[dest_kv_for_dhcpd_request]
REGEX = DHCPREQUEST\s+for\s+(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\s*(\((\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\))?\s*from\s+(([a-fA-F0-9]{2}.?){6})\s*(\(([^\)]+)\))?
FORMAT = dest_ip::$1 dest_translated_ip::$3 dest_mac::$4 dest_nt_host::$7



############################################
## Endpoint Changes: fs_notification lookups
############################################

[nix_endpoint_change_fs_notification_object_category_lookup]
filename = nix_endpoint_change_fs_notification_object_category_lookup.csv

[nix_endpoint_change_action_lookup]
filename = nix_endpoint_change_action_lookup.csv


###############################################
## Endpoint Changes: fs_notification transforms
###############################################

[vendor_object-vendor_object_path-for_fs_notification_nix]
REGEX  = path=\"([^\"]+)/([^\"]+)\"
FORMAT = vendor_object_path::$1 vendor_object::$2

# The next transform also sets status to "success" by default for
# fschange inputs (i.e., we assume "isdir=(0|1)" means a successful 
# filesystem change.
[vendor_object_category-vendor_status-for_fs_notification_nix]
REGEX  = isdir=(\d)
FORMAT = vendor_object_category::$1 vendor_status::success

###### Scripted Inputs ######
[vmstat_osx]
REGEX = (?m)(?:Pages free:\s*(\d+)\.).*(?:Pages active:\s*(\d+)\.).*(?:Pages inactive:\s*(\d+)\.).*(?:Pages wired down:\s*(\d+)\.).*(?:Pageins:\s*(\d+)\.).*(?:Pageouts:\s*(\d+)\.)
FORMAT = free::$1 active::$2 inactive::$3 wired::$4 pageins::$5 pageouts::$6

#procs -----------memory---------- ---swap-- -----io---- -system-- ----cpu----
# r  b   swpd   free  inact active   si   so    bi    bo   in   cs us sy id wa
# 0  0     24   4272 172660  67124    0    0     2     1    0    1  0  0 100  0
[vmstat_linux]
REGEX = (\d+)\s+(\d+)\s+(\d+)\s+(\d+)\s+(\d+)\s+(\d+)\s+(\d+)\s+(\d+)\s+(\d+)\s+(\d+)\s+(\d+)\s+(\d+)\s+(\d+)\s+(\d+)\s+(\d+)\s+(\d+)\s+(\d+)\s+(\d+)
FORMAT = proc_waiting::$1 proc_unitsleep::$2 swap::$3 free::$4 inactive::$7 active::$8 swap_in::$9 swap_out::$10 blocks_in::$11 blocks_out::$12 interrupts::$13 contextswitch:$14 usermode::$15 kernelmode::$16 idle::$17 waiting::$18


#CPU    pctUser    pctNice  pctSystem  pctIowait    pctIdle
#all          1          0          1          ?         97
[fields_for_cpu_sh]
REGEX = all\s+(\d*\.*\d*)\s+(\d*\.*\d*)\s+(\d*\.*\d*)\s+(\d*\.*\d*)\s+(\d*\.*\d*)
FORMAT = pctUser::$1 pctNice::$2 pctSystem::$3 pctIowait::$4 pctIdle::$5


#memTotalMB   memFreeMB   memUsedMB  memFreePct  memUsedPct   pgPageOut  swapUsedPct   pgSwapOut   cSwitches  interrupts       forks   processes     threads  loadAvg1mi
#      8192        4153        4039        50.7        49.3     1585619          5.0           ?           ?           ?           ?          82         566        0.72
[fields_for_vmstat_sh]
REGEX = \s+([0-9.?]+)\s+([0-9.?]+)\s+([0-9.?]+)\s+([0-9.?]+)\s+([0-9.?]+)\s+([0-9.?]+)\s+([0-9.?]+)\s+([0-9.?]+)\s+([0-9.?]+)\s+([0-9.?]+)\s+([0-9.?]+)\s+([0-9.?]+)\s+([0-9.?]+)\s+([0-9.?]+)
FORMAT = memTotalMB::"$1" memFreeMB::"$2" memUsedMB::"$3" memFreePct::"$4" memUsedPct::"$5" pgPageOut::"$6" swapUsedPct::"$7" pgSwapOut::"$8" cSwitches::"$9" interrupts::"$10" forks::"$11" processes::"$12" threads::"$13" loadAvg1mi::"$14"

#Proto   Port
#tcp     54106
[fields_for_open_ports_sh]
REGEX = ([^\s]+)\s+([0-9]+)
FORMAT = Proto::"$1" Port::"$2"


###### System Logs ######


## Account Management
[useradd]
REGEX = .*?(new (?:user|group|account))(?:: | (added) - )(?:name|account)=(\w+),
FORMAT = vendor_action::add name::$1 user::$3

[userdel]
REGEX = .*?((?:remove|delete) (?:user|group|account)) .(\w+).
FORMAT = action::delete name::$1 user::$2


## Authentication

# Nov  5 11:37:47 host sshd[3003]: Failed password for root from 10.1.1.233 port 58356 ssh2
# Jan 14 12:14:04 host sshd[16247]: Accepted publickey for mark from ::ffff:10.1.5.78 port 50710 ssh2
# Apr 14 12:14:04 host sshd[16247]: Failed password for invalid user player rom 72.2.2.1 port 343 ssh2 
# Aug 21 11:25:06 host sshd[2544]: Accepted keyboard-interactive/pam for root from 192.168.23.235 port 1274 ssh2
# Aug 21 10:31:01 host sshd[1468]: error: PAM: Authentication failure for root from 192.168.23.235
# Apr 24 04:02:57 magmum.google.com sshd[12128]: Invalid user player from 12.1.12.2
[ssh-login-events]
REGEX = (sshd)\[\d+\]\:\s+(\[[^]]+]\s+)?.*?(Accepted|Failed|failure|(?:Invalid user)).*?(\S+)\s+from.*?(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})(\s+port\s+(\S+)\s+\w?\s*(ssh\d))?
FORMAT = app::$1 vendor_action::$3 user::$4 src_ip::$5 src_port::$7 sshd_protocol::$8

# Mar 18 16:54:02 splunk5 sshd(pam_unix)[17183]: session opened for user mark by (uid=0)
# Mar 18 16:58:23 splunk5 sshd(pam_unix)[31639]: session closed for user mark
# Apr 30 17:45:35 magnum.google.com sshd[5019]: Connection closed by 200.81.210.36
[ssh-session-close]
REGEX = .* ((?:session|Connection) (?:opened|closed))(?: for user (\w+))?(?: by \(uid=(\d+)\))?(?: by (\d+\.\d+\.\d+\.\d+))
FORMAT = name::$1 user::$2 user_id::$3 src_ip::$4

# Apr 24 04:02:57 magmum.google.com sshd[12128]: Received disconnect from 12.3.2.1: 11: Bye Bye
[ssh-disconnect]
REGEX = .* (Received disconnect) from (\w+): 
FORMAT = name::$1 src_ip::$2

[sshd_authentication_kerberos_success]
REGEX = (sshd)\[\d+\]\:\s+(\[[^]]+]\s+)?(Authorized\s+to)\s+([^,]+)\,\s+krb5\s+principal\s+([^@]+)
FORMAT = app::$1 vendor_action::"$3" user::"$4" src_user::"$5"

[sshd_authentication_refused]
REGEX = (sshd)\[\d+\]\:\s+(\[[^]]+]\s+)?(Authentication\s+refused)\:.*?directory\s+\/home\/([^\/]+)
FORMAT = app::$1 vendor_action::"$3" user::"$4"

[sshd_authentication_tried]
REGEX = (sshd)\[\d+\]\:\s+(\[[^]]+]\s+)?(Authentication\s+tried)\s+for\s+([^\s]+)(.*?host\=([^,]+),\s+ip=(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}))?
FORMAT = app::$1 vendor_action::$3 user::"$4" src_dns::"$6" src_ip::"$7"

[sshd_login_restricted]
REGEX = (sshd)\[\d+\]\:\s+(\[[^]]+]\s+)?(Login\s+restricted)\s+for\s+([^:]+)
FORMAT = app::$1 vendor_action::"$3" user::"$4"

[pam_unix_authentication_failure]
REGEX = pam_unix\(([^:]+):\w+\)\:\s+authentication\s+(failure)\;\s+logname\=([^\s]+)?\s+uid\=([^\s]+)?\s+euid=([^\s]+)?\s+tty=([^\s]+)?\s+ruser=([^\s]+)?\s+rhost=([^\s]+)?\s+user=([^\s]+)?
FORMAT = app::"$1" action::$2 src_user::$7 src_dns::$8 user::$9

[pam_unix_authentication_success]
REGEX = pam_unix\(([^:]+):\w+\)\:\s+(session\s+opened)\s+for\s+user\s+([^\s]+)\s+by\s+(.*?)\(uid=\d+\)
FORMAT = app::"$1" vendor_action::"$2" user::$3 src_user::$4

[sudo_cannot_identify]
REGEX = pam_unix\(([^:]+):\w+\)\:\s+auth\s+(could\s+not\s+identify\s+password)\s+for\s+\[([^]]+)
FORMAT = app::"$1" vendor_action::"$2" user::"$3"

[ksu_authentication]
REGEX = (ksu)\[\d+\]\:\s+(\[[^]]+]\s+)?\'ksu\s+([^']+)\'\s+(authentication\s+failed|authenticated).*?for\s+(\w+)
FORMAT = app::$1 user::"$3" vendor_action::"$4" src_user::$5

[ksu_authorization]
REGEX = (ksu)\[\d+\]\:\s+(\[[^]]+]\s+)?Account\s+([^:]+)\:\s+authorization\s+for\s+([^@]+).*?(failed|successful)
FORMAT = app::$1 user::"$3" src_user::"$4" vendor_action::$5

[login_authentication]
REGEX = (login)\:.*(failure).*from\s+(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})(\,\s+(\S+))?
FORMAT = app::$1 action::$2 src_ip::$3 user::$5

[su_simple]
REGEX = (su)\:\s+(\[[^]]+]\s+)?from\s+([^\s]+)\s+to\s+([^\s]+)
FORMAT = app::$1 action::"success" src_user::$3 user::$4

[su_authentication]
REGEX = \'(su)\s+([^']+)\'\s+(succeeded|failed)\s+for\s+([^\s]+)
FORMAT = app::$1 user::"$2" vendor_action::$3 src_user::$4

[su_successful]
REGEX = (Successful)\s+(su)\s+for\s+([^\s]+)\s+by\s+([^\s]+)
FORMAT = app::$2 vendor_action::$1 user::$3 src_user::$4

[wksh_authentication]
REGEX = (wksh):\s+(HANDLING\s+TELNET\s+CALL)\s+\(User:\s+([^,]+),\s+Branch:\s+([^,]+),\s+Client:\s+([^)]+)
FORMAT = app::$1 vendor_action::"$2" user::$3 src_dns::$5


## Firewall
[ipfw]
REGEX = ^.* \d{2}:\d{2}:\d{2}.*? ipfw:\s*(\d+) (Deny|Accept) (UDP|TCP) ([^:]*):(\d+) ([^:]*):(\d+) (in|out) via ([^\s]+)
FORMAT = rule_number::$1 action::$2 proto::$3 dest_ip::$4 dest_port::$5 src_ip::$6 src_port::$7 direction::$8 interface::$9 

[ipfw-stealth]
REGEX = ^.* \d{2}:\d{2}:\d{2}.*? ipfw:\s*Stealth Mode connection (attempt) to (UDP|TCP) ([^:]*):(\d+) from ([^:]*):(\d+)
FORMAT = action::$1 proto::$2 src_ip::$3 src_port::$4 dest_ip::$5 dest_port::$6 

[ipfw-icmp]
#REGEX = ^.*? ipfw:\s*(\d+) (Deny|Accept) (ICMP):([^ ]*) ([^ ]*) ([^ ]*) (out|in) via ([^\s])*\s*
REGEX = ^.*? ipfw:\s*(\d+) (Deny|Accept) (ICMP):([^ ]*) ([^ ]*) ([^ ]*) (out|in) via (.*)
FORMAT = rule_number::$1 action::$2 proto::$3 application::$4 src_ip::$5 dest_ip::$6 direction::$7 interface::$8 

[pf]
REGEX = rule ([-\d]+\/\d+)\(.*?\): (pass|block) (in|out) on (\w+): (\d+\.\d+\.\d+\.\d+)\.?(\d*) [<>] (\d+\.\d+\.\d+\.\d+)\.?(\d*): (.*)
FORMAT = rule_number::$1 action::$2 direction::$3 interface::$4 src_ip::$5 src_port::$6 dest_ip::$7 dest_port::$8


## Routing
# Mar 26 11:03:20 splunk4 kernel: BLOCK IN=eth0 OUT= MAC=00:15:c5:e0:ba:45:00:10:db:ff:20:70:08:00 SRC=10.1.5.78 DST=10.2.1.44 LEN=64 TOS=0x10 PREC=0x00 TTL=61 ID=64317 DF PROTO=TCP SPT=57293 DPT=110 WINDOW=65535 RES=0x00 SYN URGP=0
[iptables]
REGEX = kernel:\s+(\w+ ?\w*) IN=(\w+) OUT=(\w*) .*SRC=(\d+\.\d+\.\d+\.\d+) DST=(\d+\.\d+\.\d+\.\d+).*PROTO=(\w+) SPT=(\w+) DPT=(\w+)
FORMAT = action::"$1" inbound_interface::$2 outbound_interface::$3 src_ip::$4 dest_ip::$5 proto::$6 src_port::$7 dest_port::$8 signature::firewall

## bash 
[bash_user]
SOURCE_KEY=source
REGEX=^\/home\/([^\/]+)\/
FORMAT=user_name::$1

[bash_user_root]
SOURCE_KEY=source
REGEX=^\/(root)\/
FORMAT=user_name::$1
