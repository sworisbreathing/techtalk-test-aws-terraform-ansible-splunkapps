# Copyright (C) 2010-2011 Sideview LLC.  All Rights Reserved.
[module]

className = Splunk.Module.ValueSetter

superClass = Splunk.Module

description = Outputs a string-valued key that becomes available to downstream modules.  Any number of preexisting keys from upstream modules can be included in the expression (including zero).  For example, setting 'template' to 'user="$user$"'  and setting 'name' to 'wrappedUser' will mean you can use $wrappedUser$ references downstream.  Common applications include - 1) placing a ValueSetter upstream from a Pulldown module to preselect a certain fixed value from a dynamic Pulldown  2) using the module's requiredKeys param to only include an optional x-axis key in a categorical chart when that key is present. (view a 'chart count over x by y' search and then click the legend; there will be no x-axis argument.



[param:name]
required = False
label = Enter the context key name you want to output.  In other words the context key at which the outputted string will be available for downstream modules.

[param:value]
required = True
label = Enter the format you want the outputted key to take. Refer to any dynamic value 'foo' from upstream as '$foo$' in the value. ie 'user="$userPulldown$"'.

[param:mode]
required = False
default = AND
values = OR,AND
label = This specifies whether or not ALL the requiredKeys are required, or if just one of them is required.

[param:requiredKeys]
required = False
label = Can be set as a comma separated list of upstream context key names.  If *any* of the keys are not present in the upstream data at runtime, the module will not write any value to the context.

[param:urlEncodeKeys]
required = False
label = comma separated list of upstream context keys that should be URL-encoded before being replaced into the value.

[param:backslashEscapeKeys]
required = False
label = If you think you need this, you probably DONT.   This is a comma separated list of upstream context keys that should have all backslash characters escaped before being replaced into the value.  You should need this only VERY rarely.  If you find yourself using this casually you're almost certainly doing it wrong.  Take a close look at what you're doing.  The general rule is that for any element that accepts user input, $foo$ and $foo.value$ will *already* be backslash-escaped, and $foo.rawValue$ will NOT be backslash-escaped.  You may just be using the wrong one.

[param:customBehavior]
required = False
label = You can define custom behaviors by using Sideview.utils.forEachModuleWithCustomBehavior(behaviorName, callback); See the general comments about what this all means in the CustomBehavior module.

[param:delim]
required = False
label = If set,  the value will be split on the given character or characters, and the value output by the module will be an array.  Note: that this is advanced functionality.  Generally this is only useful when you're preselecting a multiple-selection Pulldown, or doing something unusual with a CustomBehavior.

[param:allowClobber]
required = False
default = True
values=True,False
label = leave this empty and ValueSetter will set the fields, assuming logic from requiredKeys says to do so.  Set this to False, and ValueSetter will NOT clobber existing values from upstream.   In cases where ValueSetter is used only to preselect a Pulldown module, but values are sometimes populated from the URL (ie URLLoader) you will probably want to set this to False.