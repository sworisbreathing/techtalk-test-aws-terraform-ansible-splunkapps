# Copyright (C) 2005-2011 Splunk Inc. All Rights Reserved.
#################################################
##  CPU Macros
#################################################

###  Multiple Host Macro's
[Percent_CPU_by_Host(1)]
args = host
definition = index=os sourcetype=cpu host=$host$ | multikv fields pctIdle | eval Percent_CPU_Load = 100 - pctIdle | timechart avg(Percent_CPU_Load) by host 

[Percent_Load_by_Host(1)]
args = host
definition = index=os sourcetype=vmstat host=$host$ | multikv fields loadAvg1mi | timechart avg(loadAvg1mi) by host 

[Top_5_CPU_Processes_by_Host(1)]
args = host
definition = index=os sourcetype=top host=$host$ | multikv fields pctCPU COMMAND | stats max(pctCPU) as maxCPU by host, COMMAND, _time | sort -maxCPU | dedup 5 host

[Number_Threads_by_Host(1)]
args = host
definition = index=os sourcetype=vmstat host=$host$ | multikv fields threads | timechart avg(threads) by host

[Number_Processes_by_Host(1)]
args = host
definition = index=os sourcetype=vmstat host=$host$ | multikv fields processes | timechart avg(processes) by host


### Single Host Macros
[CPU_Usage_by_Command_for_Host(1)]
args = host
definition = index="os" sourcetype="ps" host="$host$" | multikv fields pctCPU, COMMAND | stats sum(pctCPU) as pctCPU by _time,COMMAND | timechart avg(pctCPU) by COMMAND

[CPU_Usage_by_State_for_Host(1)]
args = host
definition = index="os" sourcetype="cpu" host=$host$ | multikv fields, pctUser, pctNice, pctSystem, pctIowait, pctIdle | eval pctNice=if(isnull(pctNice), 0, pctNice) | timechart avg(pctUser), avg(pctNice), avg(pctSystem), avg(pctIowait), avg(pctIdle)

[Stats_for_CPU_State_by_Host(1)]
args = host
definition = index=os sourcetype=cpu host=$host$ | multikv fields pctUser, pctSystem, pctIdle | stats avg(pctUser), avg(pctSystem), avg(pctIdle) by host

[Top_CPU_Processes_for_Host(1)]
args = host
definition = index=os sourcetype=top host=$host$ | multikv fields pctCPU COMMAND | stats max(pctCPU) as maxCPU by host, COMMAND, _time | sort -maxCPU

[CPU_Usage_by_User_for_Host(1)]
args = host
definition = index="os" sourcetype="ps" host=$host$| multikv fields pctCPU, COMMAND, USER | timechart avg(pctCPU) by USER

[Top_CPU_Users_for_Host(1)]
args = host
definition = index=os sourcetype=top host=$host$ | multikv fields pctCPU COMMANDi, USER | stats sum(pctCPU) as Total_CPU_Time by host, USER,  | sort -Total_CPU_Time 

[CPU_Sum_by_Command_for_Host(1)]
args = host
definition = index="os" sourcetype="ps" host=$host$ | multikv fields pctCPU, COMMAND, PID | bin _time | stats avg(pctCPU) as pctCPU by _time, PID, COMMAND, host | timechart sum(pctCPU) by COMMAND


####################################################
##  Memory Macros
####################################################
### Single Host Macros
[Mem_Usage_for_Host(1)]
args = host
definition = index=os sourcetype=vmstat host=$host$ | multikv fields memFreePct, memUsedPct, swapUsedPct | timechart median(memFreePct) as Percent_Mem_Free, median(memUsedPct) as Percent_Mem_Used, median(swapUsedPct) as Percent_Swap

[Mem_Usage_by_Command_for_Host(1)]
args = host
definition = index=os sourcetype=ps host=$host$| multikv fields RSZ_KB, COMMAND | timechart eval(median(RSZ_KB)/1024) as ResidentMB by COMMAND


[Top_Mem_Command_for_Host(1)]
args = host
definition = index=os sourcetype=ps host=$host$| multikv fields RSZ_KB, VSZ_KB, pctMEM, COMMAND | eval RSZ_MB=RSZ_KB/1024 | eval VSZ_MB=VSZ_KB/1024  | stats max(RSZ_MB) as Resident_MB, max(VSZ_MB) as Virtual_MB, max(pctMEM) as Percent_Memory by host, COMMAND, _time | dedup COMMAND | sort -Resident_MB  

[Top_Users_of_VM_for_Host(1)]
args = host
definition = index=os source=ps host=$host$ | multikv fields RSZ_KB, USER | eval RSZ_MB=RSZ_KB/1024 | eval time=_time | timechart eval(sum(RSZ_MB)/dc(time)) as Avg_Mem_Usage by USER useother=F limit=10 

### Multiple Host Macros
[Percent_MEM_by_Host(1)]
args = host
definition = index=os sourcetype=vmstat host=$host$ | multikv fields memUsedPct | timechart median(memUsedPct) by host 

[Top_Mem_Processes_by_Host(1)]
args = host
definition = index=os sourcetype=ps host=$host$ | multikv fields pctMEM, RSZ_KB, VSZ_KB, COMMAND | eval RSZ_MB=RSZ_KB/1024 | eval VSZ_MB=VSZ_KB/1024 | stats median(RSZ_MB) by VSZ_MB, host, COMMAND, _time | dedup 1 host, COMMAND sortby -median(RSZ_MB) 

[Memory_Hardware_by_Host(1)]
args = host
definition = index=os sourcetype=hardware earliest=-1d host=$host$ | dedup host | eval k=if(unit=="kB",1024,1) | eval RealMemoryMB = RealMemoryMB/k | eval SwapMemoryMB = SwapMemoryMB/k | fields + RealMemoryMB, SwapMemoryMB, host | chart max(RealMemoryMB) as Real_Memory_MB, max(SwapMemoryMB) as Swap_Memory_MB by host

[Top_Memory_Users_by_Command_by_Host(1)]
args = host
definition = index=os source=ps host=$host$ | multikv fields RSZ_KB, USER, COMMAND | eval RSZ_MB=RSZ_KB/1024 | stats max(RSZ_MB) by USER, COMMAND| sort -max(RSZ_MB)

#####################################################
## Network Macros
#####################################################

[Thruput_by_Interface_by_Host(1)]
args = host
definition =   index="os" sourcetype="interfaces" host=* | multikv fields name, inetAddr, RXbytes, TXbytes | streamstats current=f last(TXbytes) as lastTX, last(RXbytes) as lastRX by Name  | eval time=_time | strcat Name "-" inetAddr "@" host Interface_Host | eval RX_Thruput_KB = (lastRX-RXbytes)/1024 | eval TX_Thruput_KB = (lastTX-TXbytes)/1024 | timechart eval(sum(TX_Thruput_KB)/dc(time)) by Interface_Host  

[Top_Inet_Addresses_by_Host(1)]
args = host
definition = index="os" sourcetype="interfaces" host=$host$ | multikv fields Name, inetAddr | strcat Name "-" inetAddr "@" host Interface_Host | top Interface_Host limit=20 

[Open_Ports_by_Host(1)]
args = host
definition = index=os sourcetype=openPorts host=$host$ | HEAD LIMIT=1 | MULTIKV FIELDS Proto, Port | EVAL PortOverProto = case(Port == "8089", "Splunk Management Port", Port == "8000", "Splunk HTTP Port", Port == "21", "ftp", Port == "22", "ssh", Port == "23", "telnet", Port == "25", "smtp", Port == "69", "tftp", Port == "79", "finger", Port == "80", "http", Port == "88", "kerberos", Port == "143", "imap", Port == "161", "snmp", Port == "162", "snmptrap", Port == "179", "bgp", Port == "1521", "SQL*Net", 1==1, Port." / ".Proto) | CHART count BY PortOverProto | SORT count DESC | RENAME count AS "# of Connections Accepted"

[Addresses_by_Host(1)]
args = host
definition = index=os sourcetype=netstat host=$host$ | HEAD LIMIT=1 | MULTIKV FIELDS ForeignAddress | REX FIELD=ForeignAddress "(?<hostOnly>^.*)[:\.].+$" | FIELDS + hostOnly | WHERE hostOnly != "*" | RENAME hostOnly AS Address | CHART count BY Address | SORT count DESC | RENAME count AS "# of Connections to This Address"
# If there is no colon in ForeignAddress, remove rightmost .xxx; www.splunk.com.http => www.splunk.com
# If there is a colon in ForeignAddress, remove rightmost :xxx; rhlx01.hs-esslingen.de:http => rhlx01.hs-esslingen.de
# And we don't want "*" as address

[Sockets_by_State_by_Host(1)]
args = host
definition = index=os sourcetype=netstat host=$host$ | MULTIKV FIELDS State | SEARCH NOT (State="<n/a>") | TIMECHART count BY State

[Frequently_Open_Ports_by_Host(1)]
args = host
definition = index=os sourcetype=openPorts | MULTIKV | STATS count BY Port | SORT count

#####################################################
## Disk Macros 
#####################################################
[Disk_Used_Pct_by_Host(1)]
args = host
definition = index="os" sourcetype="df" host=$host$ | multikv fields FileSystem, UsePct | strcat host '@' Filesystem Host_FileSystem | timechart avg(UsePct) by Host_FileSystem | rename avg(UsePct) as %Used

[Latest_Disk_Used_by_Host(1)]
args = host
definition = index="os" sourcetype="df" | dedup host

[Max_Disk_Used_by_Host(1)]
args = host
definition = index="os" sourcetype="df" host=$host$ | multikv fields UsePct, Filesystem |sort 1 UsePct, Filesystem, host

[Open_Files_by_Command_and_Host(1)]
args = host
definition =  index="os" sourcetype="lsof" host=$host$ | multikv fields COMMAND, USER, TYPE, NAME filter REG | eval time=_time| timechart eval(count/dc(time)) by COMMAND

[Open_Files_by_Type_and_Host(1)]
args = host
definition =  index="os" sourcetype="lsof" host=$host$ | multikv fields COMMAND, USER, TYPE, NAME | eval time =_time | timechart eval(count/dc(time)) by TYPE

[Open_Files_by_User_and_Host(1)]
args = host
definition =  index="os" sourcetype="lsof" host=$host$ | multikv fields COMMAND, USER, TYPE, NAME filter REG | eval time=_time | timechart eval(count/dc(time)) by USER


#####################################################
## User Macros
#####################################################
[User_Sessions_by_Host(1)]
args = host
definition = index="os" sourcetype="who" host=$host$ | multikv fields USERNAME, LINE, TIME | dedup USERNAME, LINE, TIME sortby +_time | sort -_time

[Failed_Logins_by_Host(1)]
args = host
definition = index=os eventtype=failed_login host=$host$

[Users_with_Login_Privs_by_Host(1)]
args = host
definition = index=os sourcetype=usersWithLoginPrivs host=$host$ | dedup host 

#####################################################
##  Logs and Configs Macros
#####################################################
[FS_Change_Notifications_by_Action(1)]
args = host
definition = index="os" source="fschangemonitor" host=$host$ | timechart count by action

[FS_Change_Modifications_by_Host(1)]
args = host
definition = index="os" source="fschangemonitor" action=update host=$host$

