[sos_refresh_splunk_servers_cache]
run_on_startup = true
alert.suppress = 0
alert.track = 0
cron_schedule = */15 * * * *
description = This search establishes a list of Splunk instances reachable by distributed search and which should populate the "Instance to query" pulldown present in most SoS views. Other information collected includes the value of the "host" field used to index events in _internal and the role (indexer/search-head) of the instance. This information is cached in the splunk_servers.csv lookup table.
dispatch.earliest_time = -1m
dispatch.latest_time = now
enableSched = 1
disabled = 0
realtime_schedule = 0
search = | `get_splunk_servers` | fields sos_server server_role _time | inputlookup append=true splunk_servers_cache | `curate_splunk_servers_cache` | outputlookup splunk_servers_cache

[sos_refresh_splunk_forwarders_cache]
run_on_startup = true
alert.suppress = 0
alert.track = 0
cron_schedule = 3,18,33,48 * * * *
description = This search establishes a list of Splunk forwarders to populate the "splunk_forwarders_cache.csv" lookup table. This table is used in turn to populate where appropriate the "Instance to query" pulldown present in most SoS views. The value of the "host" field used to index events in _internal (stored as "sos_server") is guessed from the hostname that the forwarder's IP resolves to. The role of the instance is stored as "server_role" and set to "forwarder".
dispatch.earliest_time = -16m@m
dispatch.latest_time = -1m@m
enableSched = 1
disabled = 0
realtime_schedule = 0
search = `set_internal_index` source=*metrics.log* group=tcpin_connections | regex hostname!="\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}" | eval server_role="forwarder" | eval sos_server=hostname | stats latest(server_role) AS server_role max(_time) AS _time by sos_server | inputlookup append=true splunk_forwarders_cache | `curate_splunk_servers_cache` | outputlookup splunk_forwarders_cache

[sos_splunk_instances_info]
run_on_startup = true
alert.suppress = 0
alert.track = 0
cron_schedule = 42 0 * * *
description = This search collects general information relative to the system (OS name, CPU architecture, # of CPU cores, physical memory) and to Splunk (version, build, SPLUNK_HOME, SPLUNK_DB, distribued license role, authentication method). The results are used as a CSV cache by the search that displays Splunk instance information in the SoS home and topology views.
dispatch.earliest_time = -1m
dispatch.latest_time = now
enableSched = 1
disabled = 0
realtime_schedule = 0
search = | `get_splunk_instances_info` | inputlookup append=true splunk_instances_info | stats first(*) AS * by sos_server | outputlookup splunk_instances_info

[sos_splunk_forwarders_info]
run_on_startup = true
alert.suppress = 0
alert.track = 0
cron_schedule = 48 0 * * *
description = This search collects general information relative to the system (OS name, CPU architecture) and to Splunk (version, build, forwarder type) for forwarder instances. The results are used as a CSV cache by the search that displays Splunk instance information in the SoS home and topology views.
dispatch.earliest_time = -1d@d
dispatch.latest_time = -0d@d
enableSched = 1
disabled = 0
realtime_schedule = 0
search = `set_internal_index` source=*metrics.log* group=tcpin_connections | regex hostname!="\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}" | eval sos_server=hostname | stats latest(build) AS build latest(arch) AS cpu_arch latest(fwdType) AS forwarder_type latest(os) AS os_name latest(version) AS version by sos_server | inputlookup append=true splunk_instances_info | stats first(*) AS * by sos_server | outputlookup splunk_instances_info

[sos_license_usage_datacube]
description = This search uses a datacube from license usage events in license_usage.log. Enable acceleration for this search to accelerate the panels of the "License Usage - Last 30 Days" view of the S.o.S app. NOTE: You should only do this on your License Master. ALSO: This is not necessary for Splunk 6.0 and above.
dispatch.earliest_time = -31d
dispatch.latest_time = -0d
auto_summarize = 0
auto_summarize.dispatch.earliest_time = -1mon@d
auto_summarize.cron_schedule = 3,13,23,33,43,53 * * * *
search = `base_license_usage_search`
