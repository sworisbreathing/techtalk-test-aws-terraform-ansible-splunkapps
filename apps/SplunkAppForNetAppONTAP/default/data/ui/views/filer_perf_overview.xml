<view autoCancelInterval="90" isVisible="true" objectMode="SimpleForm" onunloadCancelJobs="true" template="dashboard.html">
  <label>Top Filers</label>
  <module name="AccountBar" layoutPanel="appHeader"/>
  <module name="AppBar" layoutPanel="navigationHeader"/>
  <module name="Message" layoutPanel="messaging">
    <param name="filter">*</param>
    <param name="clearOnJobDispatch">False</param>
    <param name="maxSize">1</param>
  </module>
  <module name="Message" layoutPanel="messaging">
    <param name="filter">splunk.search.job</param>
    <param name="clearOnJobDispatch">True</param>
    <param name="maxSize">1</param>
  </module>
  <module name="TitleBar" layoutPanel="viewHeader">
    <param name="actionsMenuFilter">dashboard</param>
  </module>
  
  
  
  

  
  
      <module name="TimeRangePicker" layoutPanel="panel_row3_col1" >
        <param name="searchWhenChanged">False</param>
        <module name="SubmitButton">
          <param name="allowSoftSubmit">True</param>
          <param name="label">Run Report</param>
  


  


<!--	 START -->



	<module name="StaticContentSample" layoutPanel="panel_row3_col1" group="CPU and Latency Statistics">
	<param name="text">CPU and Latency Statistics</param>
  </module>

	<module name="HiddenSearch" group="Top CPU by Filer"  layoutPanel="panel_row4_col1"  >
<!-- 	<param name="search">index=netapp_perf object=system host="$host$" | eval cpu = `snap_perx(total_processor_busy, cpu_elapsed_time, 1)` | stats first(system_model) AS model first(hostname) AS hostname  first(eval(split(ontap_version, ":"))) as version first(cpu) as cpu `snap_avg(sys_read_latency, total_ops, 2)` AS read_lat `snap_avg(sys_write_latency, total_ops, 2)` AS write_lat `snap_avg(sys_avg_latency, total_ops, 2)` AS avg_lat by  _time</param> -->
<param name="search">index=netapp_perf object=system  | `real_read_lat_sys` | `real_write_lat_sys` | `real_avg_lat_sys` |  eval cpu = `snap_perx(total_processor_busy, cpu_elapsed_time, 1)` | stats first(system_model) AS model first(hostname) AS hostname  first(eval(split(ontap_version, ":"))) as version first(cpu) as cpu avg(real_read_latency) AS read_lat avg(real_write_latency) AS write_lat avg(real_avg_latency) as avg_lat by host</param>
  





	<module name="HiddenPostProcess" group="Top CPU by Filer" layoutPanel="panel_row4_col1"  >
                    <param name="search">|stats median(cpu) as "Avg. CPU" by host | sort - "Avg. CPU" |   head 10</param>
                    <module name="HiddenChartFormatter">
                      <param name="chart">bar</param>
                      <param name="chart.nullValueMode">connect</param>
                      <param name="legend.placement">bottom</param>
                      <param name="primaryAxisTitle.text">CPU Statistics</param>
                      <module name="JSChart"></module>
                    </module>
                  </module>


	<module name="HiddenPostProcess" group="Top Latency by Filer" layoutPanel="panel_row4_col2"  >
                    <param name="search">|stats median(avg_lat) as Latency by host | sort - Latency |  head 10</param>
                    <module name="HiddenChartFormatter">
                      <param name="chart">bar</param>
                      <param name="chart.nullValueMode">connect</param>
                      <param name="legend.placement">bottom</param>
                      <param name="primaryAxisTitle.text">Latency Statistics</param>
                      <module name="JSChart"></module>
                    </module>
                  </module>



	<module name="HiddenPostProcess" group="Filer Performance Statistics by Filer"  layoutPanel="panel_row7_col1"  >

                    <param name="search">| stats median(cpu) as cpu median(read_lat) as read_lat median(write_lat) as write_lat median(avg_lat) as avg_lat by host| sort - avg_lat | head 10   </param>



                                                <module name="SimpleResultsTable" layoutPanel="panel_row7_col1" >
                  <param name="displayMenu">true</param>
                  <param name="count">100</param>
                  <param name="drilldown">row</param>
                  <param name="entityName">results</param>
                  <param name="displayRowNumbers">False</param>
                  <module name="HiddenSearch">
	<param name="search">index=netapp_perf object=system $host$ | `real_read_lat_sys` | `real_write_lat_sys` | `real_avg_lat_sys` | eval cpu = `snap_perx(total_processor_busy, cpu_elapsed_time, 1)` | stats values(host) as host first(system_model) AS model first(hostname) AS hostname  first(eval(split(ontap_version, ":"))) as version first(cpu) as cpu avg(real_read_latency) AS read_lat avg(real_write_latency) AS write_lat avg(real_avg_latency) as avg_lat `snap_avg(nfs_ops, api_time, 1)` AS "nfs/s" `snap_avg(cifs_ops, api_time, 1)` AS "cifs/s" `snap_avg(http_ops, api_time, 1)` AS "http/s" `snap_avg(fcp_ops, api_time, 1)` AS "fcp/s" `snap_avg(read_ops, api_time, 1)` AS "read/s" `snap_avg(write_ops, api_time, 1)` AS "write/s" `snap_avg(iscsi_ops, api_time, 1)` AS "iscsi/s" `snap_avg(total_ops, api_time, 1)` AS "total/s" by  _time</param>
                    <module name="ConvertToIntention">
                      <param name="intention">
                        <param name="name">stringreplace</param>
                        <param name="arg">
                          <param name="host">
                            <param name="prefix">host=</param>
                            <param name="fillOnEmpty">True</param>
                            <param name="value">$click.value$</param>
                          </param>
                        </param>
                      </param>
                      <module name="ViewRedirector">
                        <param name="viewTarget">filer_perf_drilldown</param>
                      </module>
                    </module>
                  </module>
                  </module>


    
     
                  </module>  

</module>

<!-- END -->







        </module>
      </module>

</view>