[module]
className = Splunk.Module.Pager
superClass = Splunk.Module.DispatchingModule
description = Provides page links.   ie "Prev 1 2 3 4 5 Next".  This module behaves much like Splunk's Paginator module, except that Pager accounts for postProcess searches when they are present and automatically renders the correct number of page links.  Make sure to read all documentation within the Sideview Utils app for many more key details.  

[param:customBehavior]
required = False
label = You can define custom behaviors by using Sideview.utils.forEachModuleWithCustomBehavior(behaviorName, callback); See the general comments about what this all means in the CustomBehavior module.

[param:entityName]
required = False
default = results
label = Determines how Pager calculates the total number of results available for paging - from either the # of events in the job or the # of results in the job (In the splunk search API these two numbers are often different).    You can also specify 'custom' to allow you to do more specialized things.  in which cases you probably want to begin with overriding the getCustomCount method using a customBehavior. 
values = events,results,custom

[param:count]
required = False
default = 10
label = can be set to change the number of items per page.  If this number is also provided from a Pulldown or Count module upstream, the upstream value will override it.

[param:maxPages]
required = False
default = 10
label = sets a ceiling on the number of links the module will show at any one time.

[param:collapseWhenEmpty]
required = False
default = True
label = When set to False, the Pager will not collapse vertically when there are no page links to render. It will instead continue taking up the vertical space on the page as though it was still rendering links.  There is no reason to set it explicitly to True, because that is the default.