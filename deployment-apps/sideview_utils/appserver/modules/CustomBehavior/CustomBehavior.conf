# Copyright (C) 2010-2011 Sideview LLC.  All Rights Reserved.

[module]
className = Splunk.Module.CustomBehavior

superClass = Splunk.Module

description = This module simply creates a node in the functional hierarchy at which logic in application.js can easily attach custom behaviour.  This is considered a more powerful and more advanced alternative to using a 'customBehavior' param on some other Sideview modules.   I'll say that again a different way.  All Sideview modules offer a param called 'customBehavior' with a lowercase 'c'.  And in some cases where you need a 'flavorless' standalone module instead of an augmented 'custom-behaving' module, this is what you use instead.  Although this module is widely used there are not a lot of examples yet, partly because almost any example I could write is by definition 'custom'.  Until such examples exist you can email me at nick@sideviewapps.com and ask me about how to use this sucker.

[param:customBehavior]
required = False
label = Whatever you put here, you'll refer to it in application.js in a line that will look like Sideview.utils.forEachModuleWithCustomBehavior("myCustomBehaviorString", function(i,module) {module.onContextChange=function(){alert('its alive!!!!')}}).  Note that the value must be a single behavior name.  You cannot yet specify multiple behavior names by separating them with spaces or commas.  If you want to do this let me know.

[param:requiresDispatch]
required = False
default = False
label = when set to True, the module will trigger automatic search dispatches from the module framework, just as though it was a SimpleResultsTable or a header or a chart.
values = True,False

[param:arg.*]
required = False
default = False
label = Sometimes it can be useful to pass parameters from customBehavior modules, so that you can have the logic of "how" to apply the behavior embedded in the view XML. 
